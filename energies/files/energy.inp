!$Revision: 1.3 $
!$Date: 2004/06/17 08:40:54 $
!$RCSfile: energy.inp,v $

! energy.inp:
! calculate statistics for all energy terms 
!
!     ***********************************
!     * Authors and copyright:           *
!     * Alexandre Bonvin, Utrecht        *
!     * No warranty implied or expressed *
!     * All rights reserved              *
!     * (adapted from the ARIA distribu- *
!     * tion of Nilges and Linge)        *
!     ************************************

@/raid1/home/bb/caushikh/T60/run1/protocols/initialize.cns(iteration=$iteration;)

@/raid1/home/bb/caushikh/T60/run1/structures/it1/iteration.cns(iteration=$iteration;)

@/raid1/home/bb/caushikh/T60/run1/run.cns(
iteration =$iteration;
filenames =$filenames;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;
)
set message=on echo=on end

!reads in structure, coordinates and parameter files
display program gets here
@read_struc.cns
!set the energy flags:
@@/raid1/home/bb/caushikh/T60/run1/protocols/flags_new.cns(Iteration=$Iteration; Data=$Data; )
flags include dihed elec end

set display energies.disp end
igroup interaction (all) (all) end

display #Complex statistics
display #file Etot Ebond Eangle Eimpr Edihed Evdw Eelec

evaluate ($sum_tot = 0)
evaluate ($sumsq_tot = 0)
evaluate ($sum_bond = 0)
evaluate ($sumsq_bond = 0)
evaluate ($sum_angle = 0)
evaluate ($sumsq_angle = 0)
evaluate ($sum_impr = 0)
evaluate ($sumsq_impr = 0)
evaluate ($sum_dihed= 0)
evaluate ($sumsq_dihed = 0)
evaluate ($sum_vdw = 0)
evaluate ($sumsq_vdw = 0)
evaluate ($sum_elec = 0)
evaluate ($sumsq_elec = 0)

@file.cns(filenames=$filenames)

evaluate ($count = 1)
evaluate ($nstruc1 = 0)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)
     energy end
     evaluate ($sum_tot = $sum_tot + $ener)
     evaluate ($sumsq_tot = $sumsq_tot + $ener**2)
     evaluate ($sum_bond = $sum_bond + $bond)
     evaluate ($sumsq_bond = $sumsq_bond + $bond**2)
     evaluate ($sum_angle = $sum_angle + $angl)
     evaluate ($sumsq_angle = $sumsq_angle + $angl**2)
     evaluate ($sum_impr = $sum_impr + $impr)
     evaluate ($sumsq_impr = $sumsq_impr + $impr**2)
     evaluate ($sum_dihed = $sum_dihed + $dihe)
     evaluate ($sumsq_dihed = $sumsq_dihed + $dihe**2)
     evaluate ($sum_vdw = $sum_vdw + $vdw)
     evaluate ($sumsq_vdw = $sumsq_vdw + $vdw**2)
     evaluate ($sum_elec = $sum_elec + $elec)
     evaluate ($sumsq_elec = $sumsq_elec + $elec**2)

     display # $file $ener $bond $angl $impr $dihe $vdw $elec

   end if



@file.cns(filenames=$filenames)

!define flexible segments 

do (store5 = 0) (all)
eval($nchain1= 0)
while ($nchain1 < $data.ncomponents) loop nloop1
  eval($nchain1 = $nchain1 + 1)
  evaluate($fcounter=0)
  while ($fcounter < $Toppar.nseg_$nchain1) loop flex
    evaluate($fcounter=$fcounter + 1)
    do (store5 = $nchain1) (resid $Toppar.start_seg_$nchain1_$fcounter : $Toppar.end_seg_$nchain1_$fcounter 
                             and segid $Toppar.prot_segid_$nchain1 )
  end loop flex
end loop nloop1

igroup interaction (not all) (not all) end
eval($nchain1= 1)
while ($nchain1 <= $data.ncomponents) loop nloop1
  eval($nchain2 = $nchain1)
  while ($nchain2 <= $data.ncomponents) loop nloop2
    igroup
      interaction (attr store5 = $nchain1) (attr store5 = $nchain2) weights * 1 end
    end
    eval($nchain2 = $nchain2 + 1)
  end loop nloop2
  eval($nchain1 = $nchain1 + 1)
end loop nloop1

evaluate ($sum_tot = 0)
evaluate ($sumsq_tot = 0)
evaluate ($sum_vdw = 0)
evaluate ($sumsq_vdw = 0)
evaluate ($sum_elec = 0)
evaluate ($sumsq_elec = 0)

display #
display #
display #Proteins flexible interface energies
display #file Etot Evdw Eelec

evaluate ($count = 1)
evaluate ($nstruc1 = 0)
  evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)
     energy end
     evaluate ($sum_tot = $sum_tot + $ener)
     evaluate ($sumsq_tot = $sumsq_tot + $ener**2)
     evaluate ($sum_vdw = $sum_vdw + $vdw)
     evaluate ($sumsq_vdw = $sumsq_vdw + $vdw**2)
     evaluate ($sum_elec = $sum_elec + $elec)
     evaluate ($sumsq_elec = $sumsq_elec + $elec**2)

     display # $file	$ener	$vdw	$elec
   end if



evaluate ($kinter = 1.0)
@/raid1/home/bb/caushikh/T60/run1/protocols/scale_inter_only.cns

display #
display #
display #Protein-Protein intermolecular energies
display #file Etot Evdw Eelec 

evaluate ($sum_tot = 0)
evaluate ($sumsq_tot = 0)
evaluate ($sum_vdw = 0)
evaluate ($sumsq_vdw = 0)
evaluate ($sum_elec = 0)
evaluate ($sumsq_elec = 0)

@file.cns(filenames=$filenames)

evaluate ($count = 1)
evaluate ($nstruc1 = 0)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)
     energy end
     evaluate ($sum_tot = $sum_tot + $ener)
     evaluate ($sumsq_tot = $sumsq_tot + $ener**2)
     evaluate ($sum_vdw = $sum_vdw + $vdw)
     evaluate ($sumsq_vdw = $sumsq_vdw + $vdw**2)
     evaluate ($sum_elec = $sum_elec + $elec)
     evaluate ($sumsq_elec = $sumsq_elec + $elec**2)

     display # $file $ener $vdw $elec

   end if



display #
display #
display #Protein-Protein Buried_surface_area

evaluate ($sum_bsa = 0)
evaluate ($sumsq_bsa = 0)

@file.cns(filenames=$filenames)

evaluate ($count = 1)
evaluate ($nstruc1 = 0)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)

     evaluate ($nchain1 = 1)
     evaluate ($saafree = 0)
     evaluate ($esolfree = 0)
     while ($nchain1 <= $data.ncomponents) loop nloop1
       {====>} {* buried surface area *}
       do (rmsd = 0) (all)
       surface mode=access accu=0.075 rh2o=1.4 sele=(segid $Toppar.prot_segid_$nchain1) end
       show sum (rmsd) (segid $Toppar.prot_segid_$nchain1 and not (resn TIP3 or resn DMS))
       evaluate ($saafree = $saafree + $result)
       evaluate ($nchain1 = $nchain1 + 1)
     end loop nloop1
     
     do (rmsd = 0) (all)
     surface mode=access accu=0.075 rh2o=1.4 sele=(not (resn TIP3 or resn DMS)) end
     show sum (rmsd) (not (resn TIP3 or resn DMS))
     evaluate ($satot = $result)
     evaluate ($saburied = $saafree - $satot)
     evaluate ($sum_bsa = $sum_bsa + $saburied)
     evaluate ($sumsq_bsa = $sumsq_bsa + $saburied**2)

     display # $file $saburied 

   end if



stop
